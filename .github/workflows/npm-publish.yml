name: Node.js Package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  workflow_dispatch:
    inputs:
      version:
        type: string
        description: 'Version to release'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          show-progress: false
      - name: Configure Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint

  release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ inputs.version != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          show-progress: false
      - name: Configure Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Configure GIT
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Release
        run: npm version ${{ github.event.inputs.version }}

      - name: Publish RC
        run: |
          npm set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_PUBLISH_TOKEN}}

      - name: Prepare RC
        run: npm version prerelease --preid=rc

      - name: Publish RC
        run: |
          npm set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
          npm publish --access public --tag rc
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_PUBLISH_TOKEN}}

      - name: Push changes
        run: git push --follow-tags

      - name: Prepare docker
        run: |
          rm -rf node_modules
          npm ci --only=production
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin

      - name: Docker build
        run: |
          docker build -t juuu/emusk:latest -t juuu/emusk:${{ github.event.inputs.version }} .
          docker push juuu/emusk:latest
          docker push juuu/emusk:${{ github.event.inputs.version }}

